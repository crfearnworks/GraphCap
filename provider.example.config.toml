# SPDX-License-Identifier: Apache-2.0
#
# This is a provider configuration file that allows you to customize provider configurations.
# To use this file:
#
# 1. Uncomment the providers you want to enable
# 2. Make your desired changes to those providers
# 3. Save as 'provider.config.toml'
# 4. Run 'docker compose build' and 'docker compose up -d' as normal

[provider.cloud.openai]
api_key = "OPENAI_API_KEY"
base_url = "https://api.openai.com/v1"
models = [
    "gpt-4o-mini",
    "gpt-4o",
]

[provider.cloud.gemini]
# https://ai.google.dev/gemini-api/docs/openai?authuser=2
api_key = "GEMINI_API_KEY"
base_url = "https://generativelanguage.googleapis.com/v1beta"
models = [
    "gemini-2.0-flash-exp",

]

# [provider.cloud.openrouter]
# api_key = "OPENROUTER_KEY"
# base_url = "https://openrouter.ai/api/v1"
# models = [
#     "minimax/minimax-01",
#     "qwen/qvq-72b-preview",
#     "qwen/qvq-32b-preview",
#     "qwen/qvq-1.5b-preview",
#     "mistralai/pixtral-large-2411",
#     "meta-llama/llama-3.2-90b-vision-instruct:free",
#     "qwen/qwen-2-vl-72b-instruct"
# ]

# [providers.custom]
# # Custom provider configuration
# # Each provider needs a unique name, api_key (or stub), and base_url

# [providers.custom.ollama]
# api_key = "CUSTOM_PROVIDER_1_KEY"
# base_url = "http://localhost:11434"
# fetch_models = true

# [providers.custom.my_provider_2]
# api_key = "CUSTOM_PROVIDER_2_KEY"
# base_url = "http://localhost:11435"
# fetch_models = true


# # Add more custom providers as needed following the same pattern:
# # [providers.custom.provider_name]
# # api_key = "API_KEY"
# # base_url = "BASE_URL"
# # models = ["model1", "model2"]
