# Base Python stage
FROM python:3.12-slim as python-base
WORKDIR /app

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# VLLM stage
FROM vllm/vllm-openai:v0.6.4.post1 as vllm
WORKDIR /app

# Set up directories
RUN mkdir -p /cache/HF_HOME  /cache/local_cache /app /vllm-workspace /cache/HF_HOME/.hub /cache/HF_HOME/hub/.locks \
    && chmod -R 777 /cache \
    && chmod -R 775 /app /vllm-workspace

ENV VLLM_VERSION=v0.6.4.post1
ENV DO_NOT_TRACK=1
ENV HF_HOME=/cache/HF_HOME

# Install uv
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Copy project configuration
COPY pyproject.toml uv.lock /app/
RUN uv sync

# Copy application code
COPY . /app

# Copy and set permissions for entrypoint script
COPY --chmod=775 _scripts/endpoints-entrypoint.sh entrypoint.sh

# Test stage
FROM python-base as test
WORKDIR /app

# Copy project files
COPY pyproject.toml uv.lock ./
COPY GraphCap ./GraphCap
COPY tests ./tests

# Install dependencies
RUN uv venv && \
    . .venv/bin/activate && \
    uv pip install -e ".[dev]"

# Production stage
FROM vllm as prod
EXPOSE 32100
ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
CMD ["tail", "-f", "/dev/null"]
